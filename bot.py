import asyncio
import os
from aiogram import Bot, Dispatcher, F, types
from aiogram.enums import ParseMode
from aiogram.types import Message, FSInputFile, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.client.default import DefaultBotProperties

BOT_TOKEN = os.getenv("BOT_TOKEN") or "8449771354:AAF6_ff8ZLNVUk1wYBlVzKTZZFbtYwIlY8I"

bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher(storage=MemoryStorage())

# FSM: –ø–æ–∫—É–ø–∫–∞ UC
class BuyUC(StatesGroup):
    choosing_package = State()
    entering_id = State()

@dp.message(F.text == "/start")
async def start_handler(message: Message):
    kb = ReplyKeyboardBuilder()
    kb.button(text="üíé –ö—É–ø–∏—Ç—å UC")
    kb.button(text="üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã")
    kb.button(text="‚ÑπÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
    kb.button(text="üéÅ –ë–æ–Ω—É—Å—ã")
    kb.button(text="üìÉ –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏")
    kb.button(text="üìÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ")
    kb.button(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏")
    kb.adjust(2)

    banner_path = "assets/ucshop_banner.jpg"
    if os.path.exists(banner_path):
        await message.answer_photo(
            FSInputFile(banner_path),
            caption="""
<b>üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ UC SHOP</b>
–ü–æ–ø–æ–ª–Ω—è–π UC –±–µ–∑–æ–ø–∞—Å–Ω–æ —á–µ—Ä–µ–∑ AI KASSA.
–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:
""",
            reply_markup=kb.as_markup()
        )
    else:
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ UC SHOP!", reply_markup=kb.as_markup())

@dp.message(F.text == "üíé –ö—É–ø–∏—Ç—å UC")
async def buy_uc_handler(message: Message):
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="60 UC ‚Äì 70‚ÇΩ", callback_data="buy_60")],
        [InlineKeyboardButton(text="325 UC ‚Äì 320‚ÇΩ", callback_data="buy_325")],
        [InlineKeyboardButton(text="660 UC ‚Äì 610‚ÇΩ", callback_data="buy_660")],
        [InlineKeyboardButton(text="1800 UC ‚Äì 1650‚ÇΩ", callback_data="buy_1800")]
    ])
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø–∞–∫–µ—Ç UC:", reply_markup=markup)

@dp.callback_query(F.data.startswith("buy_"))
async def choose_package(callback: types.CallbackQuery, state: FSMContext):
    package = callback.data.replace("buy_", "")
    await state.update_data(package=package)
    await callback.message.answer(f"–í–≤–µ–¥–∏—Ç–µ –≤–∞—à PUBG ID –¥–ª—è {package} UC:")
    await state.set_state(BuyUC.entering_id)
    await callback.answer()

@dp.message(BuyUC.entering_id)
async def receive_pubg_id(message: Message, state: FSMContext):
    data = await state.get_data()
    package = data["package"]
    pubg_id = message.text

    fake_link = f"https://ai-kassa.example.com/pay?package={package}&id={pubg_id}"
    await message.answer(
        f"""‚úÖ –í–∞—à –∑–∞–∫–∞–∑: <b>{package} UC</b>
üéÆ PUBG ID: <code>{pubg_id}</code>

üí≥ –û–ø–ª–∞—Ç–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:
<a href='{fake_link}'>–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ</a>

–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã UC –±—É–¥—É—Ç –∑–∞—á–∏—Å–ª–µ–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 5‚Äì10 –º–∏–Ω—É—Ç.
""",
        disable_web_page_preview=True
    )
    await state.clear()

@dp.message(F.text == "üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã")
async def my_orders(message: Message):
    await message.answer("üïì –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!")

@dp.message(F.text == "‚ÑπÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
async def support(message: Message):
    await message.answer("üîß –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @OWNER_AIR\n–ü–∏—à–∏—Ç–µ –ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º.")

@dp.message(F.text == "üéÅ –ë–æ–Ω—É—Å—ã")
async def bonuses(message: Message):
    await message.answer("üéÅ –ë–æ–Ω—É—Å –¥–Ω—è: —Å–∫–∏–¥–∫–∞ 10% –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ —á–µ—Ä–µ–∑ AI KASSA!\n–ê–∫—Ç–∏–≤–Ω–∞ –¥–æ 23:59.")

@dp.message(F.text == "üìÉ –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏")
async def privacy_policy(message: Message):
    await message.answer(
        "<b>–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</b>\n\n"
        "–ú—ã —É–≤–∞–∂–∞–µ–º –≤–∞—à—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –æ–±—è–∑—É–µ–º—Å—è –∑–∞—â–∏—â–∞—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ. "
        "–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è –≤–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n\n"
        "–ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://example.com/privacy-policy"
    )

@dp.message(F.text == "üìÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ")
async def terms_of_service(message: Message):
    await message.answer(
        "<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</b>\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É—è –Ω–∞—à —Å–µ—Ä–≤–∏—Å, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥, "
        "–∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–≥—É–ª–∏—Ä—É—é—Ç –≤–∑–∞–∏–º–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è –º–µ–∂–¥—É –≤–∞–º–∏ –∏ UC SHOP.\n\n"
        "–ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://example.com/terms-of-service"
    )

@dp.message(F.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏")
async def contact_support(message: Message):
    await message.answer(
        "<b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏</b>\n\n"
        "üìß Email: k8988314@gmail.com\n"
        "üì± Telegram: @OWNER_AIR\n"
        "–ù–∞—à TikTok: https://www.tiktok.com/@straxozavr?_t=ZS-8yLbVy6QnWp&_r=1\n"
        "‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: —Å 00:00 –¥–æ 23:00 –ø–æ –ú–°–ö"
    )

async def start_bot():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

# –î–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å FastAPI (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
if __name__ == "__main__":
    asyncio.run(start_bot())
